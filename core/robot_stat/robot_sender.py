import os
import json
import asyncio
import re
from aiogram import Bot, Dispatcher
from dotenv import load_dotenv
from settings.logger import setup_logger
import datetime


load_dotenv()
logger = setup_logger(__name__)
current_date = datetime.date.today().isoformat()

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID_STAT")
JSON_FILE = "reports.json"

def extract_company_name(full_name):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, –∑–∞–∫–ª—é—á–µ–Ω–Ω–æ–µ –≤ –∫–∞–≤—ã—á–∫–∏.
    """
    match = re.search(r'"(.+)', full_name)  # –ù–∞—Ö–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –∫–∞–≤—ã—á–µ–∫
    return match.group(1) if match else full_name  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –∫–∞–≤—ã—á–µ–∫, –∏–Ω–∞—á–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ

def format_data(data):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç JSON-–¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Ç–∞–µ–º–æ–µ HTML-—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram.
    """
    message_lines = [f"<b>üìä –û—Ç—á—ë—Ç—ã {current_date}:</b>"]

    if isinstance(data, list):  # –ï—Å–ª–∏ JSON - —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π
        for index, item in enumerate(data, start=1):
            if isinstance(item, dict):  # –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ - —Å–ª–æ–≤–∞—Ä—å
                message_lines.append(f"\n<b>üìå –û—Ç—á—ë—Ç ‚Ññ{index}:</b>")  # üîπ –¢–µ–ø–µ—Ä—å —ç—Ç–æ "–û—Ç—á—ë—Ç"
                for key, value in item.items():
                    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, –ø—Ä–∏–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                    if key.lower() == "–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏":
                        value = extract_company_name(value)
                    message_lines.append(f"üîπ <b>{key}:</b> {value}")
    
    else:
        message_lines.append(str(data))  # –ü—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —á–∏—Å–ª–æ

    return "\n".join(message_lines)

async def send_data():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher(bot)

    # –ß–∏—Ç–∞–µ–º JSON
    try:
        with open(JSON_FILE, "r", encoding="utf-8") as file:
            data = json.load(file)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = format_data(data)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
        await bot.send_message(CHAT_ID, message, parse_mode="HTML")
        logger.info("[SEND SUCCESS] –û—Ç—á—ë—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")

    except Exception as e:
        logger.info(f"[SEND ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
        await bot.session.close()


# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
if __name__ == "__main__":
    asyncio.run(send_data())
